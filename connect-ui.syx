;; INCORRIGO SYX DIGITAL COMMUNICATION SYSTEMS
;; CONNECTION MANAGER

alias F3 {
  bingowing
}

alias cF9 {
  .enable #firstusereset
  yazzilou
  .disable #firstusereset
}

#firstusereset off
alias yazzilou {
  set %scan.nick $null
  set %scan.ident $null
  set %scan.sgstr $null
  set %scan.groups $null
  set %scan.netservice $null
  set %scan.groupconcat $null
  set %scan.reputation $null
  set %scan.ident $null
  set %scan.gecos $null
  set %scan.away $null
  set %scan.certfp $null
  set %scan.umodes $null
  set %scan.snomask $null
  set %scan.realuserhost $null
  set %scan.realip $null
  set %scan.isbot $null
  set %scan.srv $null
  set %scan.oline $null
  set %scan.netservice $null
  set %scan.operclass $null
  set %scan.channels $null
  set %scan.account $null
  set %scan.isid $null
  set %scan.asid $null
  set %scan.oper $null
  set %scan.ident $null
  set %scan.xhost $null
  set %scan.gecos $null
  %main.nick = $null
  %main.anick = $null
  %main.myname = $null
  %main.username = $null
  %main.envelope = $null
  %main.deliver = $null
  %main.method = $null
  %main.identify = $null
  %main.tlsfile = $null
  %main.autologin = $null
  %main.lkey = $null
  %main.tlsext = $null
  %main.deliver = $null
  %birthday = $null
  unset %away.*
  noop $decision(wobg多incorrigo syx $pipe first use settings多First use settings have been reset! mIRC will have to be restarted)
  exit -n
}

alias cF5 {
  .timer -m 1 1 yazzilou
}
#firstusereset end

;; Incorrigo Syx first use setup
dialog bingowing {
  title "incorrigo syx | connection settings"
  size -1 -1 183 201
  option dbu
  icon 1, 9 6 166 31,  ..\incorrigo-syx\syxhead.png, 0
  box "Welcome to Incorrigo Syx", 2, 9 41 168 138
  button "Save &&& E&xit", 3, 53 181 50 12, flat cancel
  text "Nickname:", 4, 21 54 40 8
  edit %main.nick, 5, 69 52 77 12, limit 30
  text "Alias Nickname:", 6, 21 68 40 8
  edit %main.anick, 7, 69 65 77 12, limit 30
  text "Friendly Name:", 8, 21 83 40 8
  edit %main.myname, 9, 69 79 77 12, limit 50
  text "Username:", 10, 21 97 40 8
  edit %main.username, 11, 69 94 77 12, limit 9
  link "[?]", 15, 150 54 10 8
  link "[?]", 16, 150 66 10 8
  link "[?]", 17, 150 81 10 8
  link "[?]", 18, 150 94 10 8
  button "...", 14, 148 139 23 12, disable flat
  check "TLS on Connect", 19, 110 110 49 10, disable
  text "Login Method:", 20, 20 158 40 9, disable
  combo 21, 68 156 77 50, disable size vsbar drop
  link "[?]", 22, 150 157 10 8, disable
  radio "Password:", 12, 20 127 40 8, disable group
  radio "TLS Certificate:", 23, 20 142 40 8, disable
  edit "TLS filepath", 13, 68 138 77 12, disable read autohs
  edit "passwordfield", 24, 68 124 77 12, disable pass limit 29
  link "[?]", 25, 149 124 10 8, disable
  check "Automatic User Account Login", 26, 21 110 82 10
  link "[?]", 27, 163 110 10 8, disable
  button "&Connect to Network", 28, 106 181 70 12, flat ok
  link "Disconnect from Current Connection", 29, 65 168 89 8, hide
}

on *:DIALOG:bingowing:sclick:28: {
  jig
  server irc.incorrigo.io
}

on *:DIALOG:bingowing:sclick:29: {
  /partall
  /partall
  quit goodbye. [connection closed]
  /partall
  dialog -x bingowing
  echo -astc Own * Disconnected: Press F3 to open a new connection.
}

on *:DIALOG:bingowing:sclick:14: {
  %main.tlsfile = $false
  %main.tlsfile = $sfile($mircdirtls-client\*.pem,Select Certificate File, Use File)
  if (!$exists(%main.tlsfile)) {
    %main.tlsfile = $false
    did -ra bingowing 13 No TLS File
    did -c bingowing 21 1
    %main.method = none
  }
  if ($exists(%main.tlsfile)) {
    did -ra bingowing 13 %main.tlsfile
  }

  jig
}

alias -l jig {
  if (!%main.autologin || %main.autologin == $false || %main.autologin == 0) {
    %main.method = none
  }
  .server -r irc.incorrigo.io -g Incorrigo-Syx-Autoconnect
  .server -a irc.incorrigo.io -p +6697 -g Incorrigo-Syx-Autoconnect $iif(%main.method == sasl && $len($decode(%caps.llwd, cl, %main.lkey) > 2) && $len(%main.lkey >= 5),-l sasl %main.nick $+ : $+ $decode(%caps.llwd, cl, %main.lkey),$null $+) $iif($exists(%main.tlsfile) && %main.method == TLSdrop && %main.tlsext != 1,-l none -key %main.tlsfile,$null $+) $iif(%main.method == nickserv,-l nickserv $decode(%caps.llwd, cl, %main.lkey),$null $+) $iif(%main.method == none,-l none,$null $+) $iif($exists(%main.tlsfile) && %main.tlsext == 1,-l external -key %main.tlsfile,$null) -i %main.nick %main.anick %main.username %main.myname
}

;; readonly edit did -m
;; readwrite edit did -n
on *:DIALOG:bingowing:sclick:26: {
  if ($did(bingowing, 26).state == 0) {
    did -r bingowing 13,21,24
    did -b bingowing 12-25
    did -h bingowing 22,25,27
    did -u bingowing 23,12
    set %main.autologin 0

  }
  if ($did(bingowing, 26).state == 1) {
    did -e bingowing 12-25
    did -b bingowing 14,19
    did -h bingowing 27
    did -v bingowing 22,25,27
    did -u bingowing 23,12
    did -c bingowing 12
    did -m bingowing 13
    did -u bingowing 23
    if (%caps.llwd != $null && $len(%caps.llwd) > 2) {
      did -ra bingowing 24 $decode(%caps.llwd, cl, %main.lkey)
    }
    set %main.autologin 1

    ;; start reload of login options
    ;; fill login method options
    did -r bingowing 21
    did -a bingowing 21 None
    did -a bingowing 21 Your Password
    did -a bingowing 21 TLS Certificate
    did -a bingowing 21 Nickserv

    ;; load login method
    if (!%main.method || %main.method == $false) {
      %main.method = none
    }
    if (%main.method == none) {
      did -c bingowing 21 1
    }

    if (%main.method == sasl) {
      did -c bingowing 21 2
    }

    if (%main.method == TLSdrop) {
      if ($exists(%main.tlsfile)) {
        did -c bingowing 21 3
      }

      else {
        did -c bingowing 12,21 
        did -u bingowing 23
      }
    }

    if (%main.method == nickserv) {
      did -c bingowing 21 4
    }

    ;; selecting autologin options
    if (%main.autologin == 1) {
      did -c bingowing 26
      did -e bingowing 12-25
      did -b bingowing 14,19
      did -h bingowing 27
      did -v bingowing 22,25,27
      did -u bingowing 23,12
      did -c bingowing 12
      did -m bingowing 13
      did -u bingowing 23
      ;; sasl external override
      if (%main.tlsext == 1) {
        did -b bingowing 20-21
        did -c bingowing 21 1
        did -h bingowing 22
        did -ec bingowing 19
      }
    }

    ;; switching to TLS file
    if ($exists(%main.tlsfile)) {
      ;; fill out file path for existing file
      did -ra bingowing 13 %main.tlsfile
    }

    if (%caps.llwd != $null) {
      did -ra bingowing 24 $decode(%caps.llwd, cl, %main.lkey)
    }

    jig
    ;;; end options details

  }
}

on *:DIALOG:bingowing:edit:5,7,9,11: {
  did -ra bingowing 5 $remove($did(bingowing, 5).text, $chr(32))
  did -ra bingowing 7 $remove($did(bingowing, 7).text, $chr(32))
  did -ra bingowing 11 $remove($did(bingowing, 11).text, $chr(32))
  if ($len($did(bingowing, 5).text) > 2) { %main.nick = $did(bingowing, 5).text }
  if ($len($did(bingowing, 7).text) > 2) { %main.anick = $did(bingowing, 7).text }
  if ($len($did(bingowing, 9).text) > 2) { %main.myname = $did(bingowing, 9).text }
  if ($len($did(bingowing, 11).text) > 2) { %main.username = $did(bingowing, 11).text }
  jig
}



on *:DIALOG:bingowing:sclick:19: {
  if ($did(bingowing, 19).state == 1) {
    did -c bingowing 21 1
    did -b bingowing 20-21
    did -h bingowing 22
    if (!$exists(%main.tlsfile)) {
      %main.tlsfile = $sfile($mircdirtls-client\*.pem,Choose Certificate File, Use &File)
    }
    if (!$exists(%main.tlsfile)) {
      ;; still doesn't exist ... idiot proof time
      did -u bingowing 19
      did -c bingowing 21 1
      did -e bingowing 20-21
      did -v bingowing 22
      did -f bingowing 21
      %main.tlsext = 0
      .timer -m 1 1 noop $$decision(hugo多incorrigo syx $pipe tls settings多You need to select a file that exists if you want to use it as a TLS certificate)
    }

    if ($exists(%main.tlsfile)) {
      ;; user is co-operating - work alongside
      did -ra bingowing 13 %main.tlsfile
      %main.tlsext = 1
    }

  }

  if ($did(bingowing, 19).state == 0) {
    did -c bingowing 21 1
    did -e bingowing 20-21
    did -v bingowing 22
    did -f bingowing 21
    %main.tlsext = 0
  }
  jig
}


on *:DIALOG:bingowing:sclick:12: {
  ;;click password option
  if ($did(bingowing, 12).state == 1) {
    %main.deliver = 1
    did -b bingowing 14,13,19
    did -e bingowing 20-21
    did -h bingowing 27
    did -v bingowing 25
    %main.tlsext = 0
    did -u bingowing 19
  }
  jig
}

on *:DIALOG:bingowing:sclick:23: {
  ;; click certificate option
  if ($did(bingowing, 23).state == 1) {
    %main.deliver = 2
    did -e bingowing 14,13,19,21
    did -v bingowing 17,27,25
    %main.tlsext = 0
  }
  jig
}

on *:DIALOG:bingowing:edit:24: {
  if ($len($did(bingowing, 24).text) > 1) {
    did -ra bingowing 24 $remove($did(bingowing, 24).text, $chr(32))
    %caps.llwd = $encode($did(bingowing, 24).text, cl, %main.lkey)
    jig
  }
}

on *:START: {
  if (!%main.lkey || %main.lkey == $false) {
    echo -eatc Mode * Uniquey: Your new key is $capsnaffler
    unset %snaffle.*
    unset %caps.*
  }

  if (!%birthday || %birthday == $false) {
    if (!%main.nick || %main.nick == $false) {
      %main.nick = $genguestnick
      echo -stc Mode * Nickname Setup: Generated main nickname - %main.nick
    }
    if (!%main.anick || %main.anick == $false) {
      %main.anick = $genguestnick
      echo -stc Mode * Alt Nickname: Generated alternative nickname - %main.anick
      linesep
    }
    if (!%main.myname || %main.myname == $false) {
      if ($exists(incorrigo-syx\docu-mental\radio-rental.tr) && $exists(incorrigo-syx\docu-mental\chicken-oriental.tr)) {
        %main.myname = $read($mircdirincorrigo-syx\docu-mental\radio-rental.tr) $read($mircdirincorrigo-syx\docu-mental\chicken-oriental.tr)
        echo -stc Mode * Display Name: Generated. Your new name is %main.myname
      }
      else goto barrymore
    }
    if (!%main.username || %main.username == $false) {
      %main.username = syx- $+ $strgen(1,5)
    }

    if (!%main.method || %main.method == $false) {
      %main.method = none
    }

    if (!%main.tlsfile || %main.tlsfile == $false) {
      %main.tlsfile = $null
    }

    if (!%main.tlsext || %main.tlsext == $false) {
      %main.tlsext = 0
    }
    .identd off
    %birthday = $time(yyyy-mm-dd HH:nnTT)
    .timer -m 1 100 noop $decision(ugot多incorrigo syx $pipe welcome多Welcome to Incorrigo Syx script for mIRC !)
  }

  else {
    .nick %main.nick
    .anick %main.anick
    .fullname %main.myname
    .emailaddr %main.username
    :barrymore
  }
  bingowing
}

alias -l albeit {
  if ($1- == $time(yyyy-mm-dd HH:nnTT)) {
    dialog -t bingowing incorrigo syx $pipe welcome connection settings
    did -g bingowing 1 0 $mircdirincorrigo-syx\firstusesetup.png
  }
}

on *:DIALOG:bingowing:init:0: {
  if ($server) { did -e bingowing 29 }
  albeit %birthday
  if (!%main.lkey) {
    echo -eatc Mode * Cap Snaffler: Your new key is $capsnaffler
    unset %snaffle.*
  }

  if (%main.identify == $null) {
  }

  if (%caps.llwd != $null) {
    did -ra bingowing 24 $decode(%caps.llwd, cl, %main.lkey)
  }

  ;; fill login method options
  did -r bingowing 21
  did -a bingowing 21 None
  did -a bingowing 21 Your Password
  did -a bingowing 21 TLS Certificate
  did -a bingowing 21 Nickserv

  ;; load login method
  if (!%main.method || %main.method == $false) {
    %main.method = none
  }
  if (%main.method == none) {
    did -c bingowing 21 1
  }

  if (%main.method == sasl) {
    did -c bingowing 21 2
  }

  if (%main.method == TLSdrop) {
    did -c bingowing 21 3
  }

  if (%main.method == nickserv) {
    did -c bingowing 21 4
  }

  ;; selecting autologin options
  if (%main.autologin == 1) {
    did -c bingowing 26
    did -e bingowing 12-25
    did -b bingowing 14,19
    did -h bingowing 27
    did -v bingowing 22,25,27
    did -u bingowing 23,12
    did -c bingowing 12
    did -m bingowing 13
    did -u bingowing 23
    ;; sasl external override
    if (%main.tlsext == 1) {
      did -b bingowing 20-21
      did -c bingowing 21 1
      did -h bingowing 22
    }

    if (%main.deliver == 1) {
      did -c bingowing 12
      did -u bingowing 23
      did -b bingowing 14,13,19
      did -h bingowing 27
      did -v bingowing 25
      did -u bingowing 19
    }

    if (%main.deliver == 2) {
      did -c bingowing 23
      did -u bingowing 12
      did -e bingowing 14,13,19,21
      did -v bingowing 17,27,25
    }

    if (%main.tlsext == 1) {
      if ($exists(%main.tlsfile)) {
        did -c bingowing 19
        did -cb bingowing 21 1
      }
    }
  }

  ;; switching to TLS file
  if ($exists(%main.tlsfile)) {
    ;; fill out file path for existing file
    did -ra bingowing 13 %main.tlsfile
  }

  jig

}

on *:DIALOG:bingowing:sclick:21: {
  if ($did(bingowing, 21).sel == 1) {
    set %main.method none
  }

  if ($did(bingowing, 21).sel == 2) {
    if ($len($did(bingowing, 24).text) >= 2) {
      set %main.method sasl
    }

    else {
      did -c bingowing 21 1
      .timer -m 1 1 noop $$decision(hugo多incorrigo syx $pipe sasl login多You should enter a password if you want to auto login during connect)
      did -f bingowing 24
      %main.method = none
    }
  }

  if ($did(bingowing, 21).sel == 3) {
    if (!$exists(%main.tlsfile)) {
      %main.tlsfile = $sfile($mircdirtls-client\*.pem,Choose Certificate File, Use &File)
    }
    if (!$exists(%main.tlsfile)) {
      ;; still doesn't exist ... idiot proof time
      set %main.method none
      did -c bingowing 21 1
      did -ra bingowing 13 TLS Certificate File
    }

    if ($exists(%main.tlsfile)) {
      did -ra bingowing 13 %main.tlsfile
      set %main.method TLSdrop
    }
  }

  if ($did(bingowing, 21).sel == 4) {
    set %main.method nickserv
  }
  jig
}

alias -l demome {
  return cunt
}

on *:DIALOG:bingowing:sclick:3: {
  .identd off
  .nick %main.nick
  .anick %main.anick
  .emailaddr %main.username
  .fullname %main.myname
  if (!%main.lkey || $len(%main.lkey) <= 1) {
    capsnaffler
    echo -stec Mode * Cap Snaffler: Your new loan word is %main.lkey
  }
}

on *:DIALOG:bingowing:close:0: {
  .identd off
  .nick %main.nick
  .anick %main.anick
  .emailaddr %main.username
  .fullname %main.myname
}

on *:DIALOG:bingowing:sclick:15: {
  .timer -m 1 1 noop $decision(iugo多incorrigo syx $pipe connection settings多Your nickname is the main name that identifies you what people go by. Generally it is the first impression that anyone gets of you $&
    $crlf $crlf $+ Nicknames should start with a letter and consist of up to 30 letters and numbers)
}

on *:DIALOG:bingowing:sclick:16: {
  .timer -m 1 1 noop $decision(uigo多incorrigo syx $pipe alias / alternate nickname多An alias nickname is the one that will be used if your "main" nickname is already being used)
}

on *:DIALOG:bingowing:sclick:17: {
  .timer -m 1 1 noop $decision(iugo多incorrigo syx $pipe friendly name / gecos多Although you are not required to use your full name at all $+ $c you can set a friendly name that will show up in your /WHOIS response $+ $crlf $crlf $+ Most users find this an apt opportunity to say something clever about themself)
}

on *:DIALOG:bingowing:sclick:18: {
  .timer -m 1 1 noop $decision(iugo多incorrigo syx $pipe username多Your username is a short secondary ID that is shown in your overall address: $crlf $crlf $+ %main.nick $+ !~ $+ %main.username $+ @host.name.or.ip)
}

;; login method
on *:DIALOG:bingowing:sclick:22: {
  .timer -m 1 1 noop $decision(iugo多incorrigo syx $pipe login method多None - You will need to identify manually when connected $+ $c and none of these details will be used $+ $crlf $crlf $+ Your Password - Your password will be used as part of the connection process $+ $crlf $crlf $+ TLS Certificate - Your certificate file will be used but no login will be attempted $+ $c this option should be used when your certificate hasn't been added to your account yet. If it is added to your account then nickserv will auto-detect when connected $+ $crlf $crlf $+ Nickserv - No login will be attempted during connection but your password will automatically be sent to nickserv once the normal connection with the standard checks has succeeded)
}

;; password field
on *:DIALOG:bingowing:sclick:25: {
  .timer -m 1 1 noop $decision(iugo多incorrigo syx $pipe account password多This field is where you should put your password. If login method is set to "none" this password won't be used $+ $crlf $crlf $+ "Your Password" will use the password during connect $+ $crlf $crlf $+ Nickserv will wait until after a normal connection has taken place and then identify with nickserv $+ $crlf $crlf $+ The variable containing anything you type in this field will be encrypted using a randomly generated key. Values below 2 characters in length will be ignored)
}

;; TLS on connect checkbox
on *:DIALOG:bingowing:sclick:27: {
  .timer -m 1 1 noop $decision(iugo多incorrigo syx $pipe TLS on connect多If you use a TLS certificate - it is basically using a whole file as a password. $+ $crlf $crlf $+ You can either wait for the server to detect your certificate after the entire connection process so you won't need your password $+ $c or you can use it to log in during connection $+ $crlf $crlf $+ Connecting this way allows us to recognise you as a verified / trusted user so certain checks we run on all connections will be VIP'd / boxed off - and you will be given priority $+ $crlf $crlf $+ This type of login will allow our registered users to connect when the network is in emergency mode / not allowing new connections)
}

alias bingowing {
  if (!$dialog(bingowing)) {
    noop $dialog(bingowing,bingowing, u)
  }
}
